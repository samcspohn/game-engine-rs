
game-engine:
  ✔ impl multi camera support @done(23-04-24 17:08)
  ☐ fix model manager sharing between game thread and render thread
  ✔ impl camera component @done(23-04-26 10:05)
  ☐ optimize transform data push to GPU
  ✔ fix camera image texture "no longer exists" @done(23-06-07 10:35)
  ☐ implement lazy load of assets
  ☐ change hashmaps (components, etc.) to faster hash
  ☐ improve write to buffer (bottle neck)
  ☐ command buffer builder can not be allowed in dylib / buffers locked during rendering when in dylib?
  ☐ change instances of buffer_usage_all()
  ✔ try c++ style deque for storage @done(23-09-05 15:36)
  ☐ implement gui in game
  ☐ rework autocompilation
  ☐ add priority to asset loading
  ✔ fix transform children mem balloon when creating & destroying @done(23-09-05 15:32)
  ☐ remove deepmesa linked list. causes mem leak
  ☐ fix seg fault (loading dylib?)
  ☐ use atomic_bitvec for valid
  ☐ fix 6mil renderer limit
  ☐ optimize instantiate single for cache locality
  ☐ fix renderer/copy
  ☐ object pool
  ☐ add object names
  ☐ macro for field inspection
  ☐ add LOD to particles
  ✔ add antialiasing @done(23-09-23 11:28)
  ☐ compute shader triangle rasterization for pixel sized triangles (particles)
  ☐ implement storage as maybeunint
  ✔ random freeze comes from editor_update in main_loop. terrain update @done(23-10-27 20:27)
  ☐ implement actual parallel prefix sum
  ☐ reduce mutex locks
  rendering:
    ☐ add materials
    ☐ use indirect to draw all geometry in one pass
  optimizations:
    ✔ write transform update data using ptr(&[],&[]) @done(23-09-05 15:36)
      let m_slice = &mut mapping[offset..offset + i.len()];
      m_slice.copy_from_slice((*i.v.get()).as_slice());
  particles:
    ☐ different rng type for particle emission
    ✔ color over life @started(23-04-24 17:13) @done(23-08-11 20:48) @lasted(15w4d3h35m16s)
    ☐ color over emission
    ☐ size over life
    ☐ particle count display
    ☐ fix culling @started(23-04-30 16:13)
    ✔ active particles list @done(23-08-07 16:02)
    ✔ seperate buffers for emitter init/de-init @done(23-08-11 20:47)
    ✔ textures @started(23-08-11 20:47) @done(23-08-14 12:51) @lasted(2d16h4m33s)
    ✔ texture for color over live @started(23-08-14 12:51) @done(23-08-16 09:06) @lasted(1d20h15m7s)
    ☐ animated textures
    ✔ rotations @done(23-08-16 09:06)
    ✔ only update templates after change @done(23-08-16 09:06)
  lights:
    ✔ lights - tiled @done(24-01-18 11:39)
    ✘ bvh tile query optimization @cancelled(24-02-02 22:02)
    ✔ quadtree based tiling @done(24-02-02 22:02)
    ✔ quadtree dynamic "unlimited" lights per quadrant @done(24-02-06 11:51)
    ☐ improve quadtree design/performance
    ☐ blh (bounding line hierarchy) for light list in tiles
    ☐ morton encoded quadrants
    ☐ shadows
    ☐ move light functions/structs to seperate file out of util
    ☐ morton code sort lights before quadtree insertion?
    ☐ performance regression when looking at origin?
  animations:
    ☐ animations
  camera:
    ✔ camera @done(23-04-26 10:06)
    ✔ multiple camera @done(23-04-26 10:06)
    ☐ re-add cull view
    ☐ render targets
  models:
    ✔ fix multiple meshes @done(23-08-05 09:40)
  editor:
    ☐ menu bar
    ✔ drag/drop assets @done(23-08-05 09:40)
    ✔ fix cross platform path serialization @done(23-08-05 09:40)
    ☐ 3d control widget
    ☐ click on objects to select
    ✔ runtime compilation @done(23-06-07 10:02)
    ☐ add drop down for assets
    ☐ rework project inspector/remove walking directory
  audio:
    ☐ audio manager
    ☐ audio asset
refactor:
  ✔ restructure files @done(23-07-25 10:24)
  ✘ rework/solidify render pipeline with secondary command buffer. only update on change @cancelled(23-07-25 10:25)
  ✔ fix runtime compiled code using command buffer freezing engine @done(23-07-04 10:40)
    ✔ add enqueue gpu work @done(23-07-04 10:40)
    ✘ add enqueue render work @cancelled(23-08-05 09:38)
  ✔ go through and ensure args to functions are reasonable @done(23-08-05 09:39)
  ✘ fix multiple meshes in model @cancelled(23-08-05 09:38)
  ✘ optimize parallel instantiate/de-instantiate @cancelled(23-07-25 10:25)
  ✔ implement Engine struct to contain all functionality/state @done(23-08-05 09:39)
revamp:
  ☐ editor ui
  ☐ auto-compilation
  